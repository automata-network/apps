import type { SubmittableExtrinsic } from '@polkadot/api/types';
import BN from 'bn.js';
import { DeriveBounties } from '@polkadot/api-derive/types';
import { BlockNumber } from '@polkadot/types/interfaces';
export declare type BountyApi = {
    acceptCurator: ((...args: any[]) => SubmittableExtrinsic<'promise'>);
    approveBounty: ((...args: any[]) => SubmittableExtrinsic<'promise'>);
    awardBounty: ((...args: any[]) => SubmittableExtrinsic<'promise'>);
    bestNumber?: BlockNumber;
    bounties?: DeriveBounties;
    bountyCuratorDeposit: BN;
    bountyDepositBase: BN;
    bountyIndex?: BN;
    bountyUpdatePeriod?: BN;
    bountyValueMinimum: BN;
    claimBounty: ((...args: any[]) => SubmittableExtrinsic<'promise'>);
    closeBounty: ((...args: any[]) => SubmittableExtrinsic<'promise'>);
    dataDepositPerByte: BN;
    extendBountyExpiry: ((...args: any[]) => SubmittableExtrinsic<'promise'>);
    maximumReasonLength: number;
    proposeBounty: ((...args: any[]) => SubmittableExtrinsic<'promise'>);
    proposeCurator: ((...args: any[]) => SubmittableExtrinsic<'promise'>);
    unassignCurator: ((...args: any[]) => SubmittableExtrinsic<'promise'>);
};
export declare function useBounties(): BountyApi;
